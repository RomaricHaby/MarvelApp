plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

Properties loadProperties(String path) {
    def propertiesFile = rootProject.file(path)
    def properties = new Properties()
    properties.load(new FileInputStream(propertiesFile))
    return properties
}

def keyStoreProperties = loadProperties("keystore.properties")
def apiKeyProperties = loadProperties("apimarvel.properties")

android {
    signingConfigs {
        production {
            storePassword keyStoreProperties['storePassword']
            keyPassword keyStoreProperties['keyPassword']
            keyAlias keyStoreProperties['keyAlias']
            storeFile file(keyStoreProperties['storeFile'])
        }
    }

    compileSdk 31

    defaultConfig {
        applicationId "com.marvelapp"
        minSdk 24
        targetSdk 31


        def major = Integer.parseInt(property('version.major'))
        def minor = Integer.parseInt(property('version.minor'))
        def patch = Integer.parseInt(property('version.patch'))
        def buildNumber = Integer.parseInt(property('version.buildNumber'))


        versionCode buildNumber
        versionName "${major}.${minor}.${patch}-b${buildNumber}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "environment"
    productFlavors {
        development {
            dimension "environment"
            applicationIdSuffix = ".dev"
            versionNameSuffix '-dev'
            ext {
                BASE_URL = "http://gateway.marvel.com"
            }
        }


        applicationVariants.all { variant ->

            def dimensions = variant.productFlavors
            def environment = dimensions[0]

            def BASE_URL = environment.ext.BASE_URL
            variant.buildConfigField "String", "BASE_URL", "\"$BASE_URL\""

        }
    }


    buildTypes {
        debug {
            buildConfigField("String", "marvel_api_private", apiKeyProperties["marvelAPIPrivate"])
            buildConfigField("String", "marvel_api_public", apiKeyProperties["marvelAPIPublic"])
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.production
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    def versionVM = "2.4.1"
    //lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versionVM"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$versionVM"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versionVM"

    //paging
    implementation 'androidx.paging:paging-common:3.1.1'
    implementation "androidx.paging:paging-runtime:3.1.1"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation("com.squareup.okhttp3:logging-interceptor:4.9.2")
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    // Koin Core features
    implementation "io.insert-koin:koin-android:3.1.6"
    // Koin Test features
    testImplementation "io.insert-koin:koin-test:3.1.6"


    def nav_version = "2.4.2"

    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:$nav_version"


    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1'

    //Coil
    implementation("io.coil-kt:coil:2.0.0-rc03")

}